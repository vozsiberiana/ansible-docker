---
- name: Create a micro instance
  hosts: localhost
  gather_facts: false
  vars:
    keypair: key-amazon
    instance_type: t2.micro
    security_group: sg-0e00978364e148d44
    subnet_id: subnet-0a777c7272fde2cf6
    image: ami-0b752bf1df193a6c4
    region: eu-west-1
  tasks:
    - name: Launch instance
      amazon.aws.ec2_instance:
         key_name: "{{ keypair }}"
         security_group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image_id: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: "{{ subnet_id }}"
         network:
          assign_public_ip: yes
         tags:
           Name: ansibleInstance
      register: ec2

    - name: Print ec2_instance return information
      ansible.builtin.debug:
        var: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 10
        sleep: 5
        timeout: 300
      vars:
        ansible_user: ec2-user
      loop: "{{ ec2.instances }}"

- name: Configure instance(s)
  hosts: launched
  become: true
  gather_facts: true
  vars:
    ansible_user: ec2-user
  tasks:
  - name: Install Apache httpd
    yum:
      name: httpd
      state: latest

  - name: Start Apache httpd
    service:
      name: httpd
      enabled: true
      state: started

  - name: Install App
    copy: 
      src: /home/sinensia/hello-2048/public_html/
      dest: /var/www/html/
      owner: apache
      group: apache
      mode: "0644"
      directory_mode: "0755"
